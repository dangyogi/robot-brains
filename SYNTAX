operator precedence (highest to lowest)
    '.' (left)
    '^' (right)
    unary '-' (right)
    '*' '%' (left)
    '/' (right)
    '+' '-' (left)
    '<' '<=' '<~=' '>' '>=' '>~=' '~=' '!~=' '<~>' (nonassoc)
    '==' '!=' '<>' (nonassoc)
    NOT (nonassoc)


source_file: opmode | module


opmode: (AUTONOMOUS | TELEOP) OPMODE NEWLINES
        {use}


module: MODULE parameters NEWLINES
        {use}
        {typedef}
        {vartype}
        {fn_decl | sub_decl}


use: USE IDENT [AS IDENT] arguments NEWLINES


typedef: TYPE IDENT IS FUNCTION [TAKING 1{IDENT}] [RETURNING 1{IDENT}]
           NEWLINES
       | TYPE IDENT IS SUBROUTINE [TAKING 1{IDENT}] NEWLINES
       | TYPE IDENT IS LABEL [TAKING 1{IDENT}] NEWLINES


vartype: IDENT IS IDENT NEWLINESS
       | DIM IDENT '[' const_expr ']' NEWLINES


fn_decl: FUNCTION IDENT parameters
         {typedef}
         {vartype}
         {statement}
         {labeled_block}


seb_decl: SUBROUTINE IDENT parameters
          {typedef}
          {vartype}
          {statement}
          {labeled_block}


labeled_block: LABEL IDENT {parameter} NEWLINES
               {statement}


parameters: {parameter} {KEYWORD 1{parameter}}


parameter: IDENT ['=' const_expr]


statement: simple_statement NEWLINES
         | dlt


simple_statement: PASS
                | primary arguments [RETURNING_TO: primary]
                | PREPARE primary arguments
                | REUSE primary [RETURNING_TO: primary]
                | RELEASE primary
                | SET lvalue TO: primary
                | primary ('+='|'-='|'*='|'/='|'%='|'^=') primary
                | GOTO primary {primary} [RETURNING_TO: primary]
                | RETURN {primary} [TO: primary]


dlt: '====' NEWLINE
     1{expr '|' {'Y'|'N'|'-'} NEWLINE}
     '====' NEWLINE
     1{simple_statement ['|' {'X'|' '}] NEWLINE}
     '====' NEWLINE


lvalue: IDENT
      | primary '.' IDENT
      | primary '[' expr ']'


expr: primary
    | NOT expr
    | '-' expr
    | expr '^' expr
    | expr '*' expr
    | expr '/' expr
    | expr '%' expr
    | expr '+' expr
    | expr '-' expr
    | expr '<' expr
    | expr '<=' expr
    | expr '<~=' expr
    | expr '>' expr
    | expr '>=' expr
    | expr '>~=' expr
    | expr '==' expr
    | expr '!=' expr
    | expr '<>' expr
    | expr '!~=' expr
    | expr '<~>' expr


primary: STRING | FLOAT | INTEGER | BOOL | IDENT
       | '(' expr ')'
       | primary '.' IDENT
       | primary '[' expr ']'
       | '{' primary arguments '}'


arguments: {primary} {KEYWORD 1{primary}}

