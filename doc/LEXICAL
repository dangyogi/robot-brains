comments:
    - # to end-of-line
    - or "REM" to end-of-line? (NOT YET)

line continuation:
    - -> as first non-whitespace on next line
    - applies to the code before the | (if any) in the line above

identifiers:
    - letters, digits, underscore (not starting with digit)
    - global (module level) start with Capital
        - no, declared with "global" like python...
    - strings end with $
    - booleans end with ?
    - integers start with i-n (I-N for globals)
    - else float
    - arrays are explicitly dimensioned, taking the element type from the type
      of the array identifier

reserved words:
    - ABS
    - AS
    - AUTONOMOUS
    - BOOLEAN
    - CONTINUE
    - DIM
    - DONE
    - FLOAT
    - FUNCTION
    - GOTO
    - INTEGER
    - IS
    - LABEL
    - MODULE
    - NATIVE
    - NOT
    - OPMODE
    - RETURN
    - RETURN_LABEL
    - RETURNING
    - RETURNING_TO:
    - SET
    - STRING
    - SUBROUTINE
    - TAKING
    - TELEOP
    - TYPE
    - USE
    - VAR

literals:
    - strings:
        - string literals use double quotes, all on one line
          - native strings use ` rather than double quotes
        - embedded double quotes must be doubled (e.g., "He said, ""Hello!""")
          - native strings do not allow embedded ` characters
        - no other escaping is provided (e.g., no \ escapes like \n)
        - no string literal concatenation
        - no embedded variable substitutions (as part of the literal)
    - integers:
        - [-+]?[digit]+
        - no support for different bases
    - floats:
        - standard float literal formats
        - fractional (NOT YET)
            - digit*.digit+/digit+
    - units (follow literal):
        - all units are part of the literal representation and are converted
          to a common base unit so that the resulting literal value no longer
          has a unit associated with it
          - units must follow the literal with no intervening spaces
          - units may be followed by an exponent, e.g., ft^2
          - units may include one divisor, e.g., ft/sec^2
          - compound units are not yet supported, e.g., ft*lbs
        - lengths (in, mm, cm, m, ft)
            - converted to inches
        - time (sec, msec, usec, min)
            - converted to seconds
        - angles (deg, rad, rot)
            - converted to degrees
        - force (oz, lb(s), lb, g, kg, newton(s) (N), dyne(s))
            - converted to lbs
        - mass (oz, lb(s), gram(s) (g), kgram(s) (kg))
            - converted to lbs
        - speed (ips, ipm, fps, fpm, mps, mpm, mph)
            - converted to in/sec
        - acceleration (gravity)
            - converted to in/sec^2
        - percent (%)
            - divided by 100
        - all units are also reserved words representing literals (in addition
          to "pi")
            - this allows "x/rad" to convert the common base unit (degrees)
              into radians
              - because of the operator precedence, this also works for
                "x/ft/sec^2" to convert x from common base units (in/sec^2) to
                ft/sec^2.  This works because x/ft/sec^2 is parsed as
                x/(ft/sec^2).

