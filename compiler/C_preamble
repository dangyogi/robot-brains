// offsetof
#include <stddef.h>

// memcpy
#include <string.h>

// math
#include <math.h>


struct label_descriptor_s {
    /////////////// initialized outside of main:
    char *name;
    char *type;                   // 'label', 'subroutine', 'function',
                                  // 'native_subroutine', 'native_function'
    int num_param_blocks;

    // first param_block_descriptor is always positional parameters
    // initialized as: (struct param_block_descriptor_s []){ ... }
    struct param_block_descriptor_s *param_block_descriptors;

    unsigned long params_passed;  // has RUNNING, kw_passed, param_passed bits.

    struct label_descriptor_s *return_label;

    /////////////// initialized in module init:
    struct module_descriptor_s *module;
    void *label;                  // set in label init code
};


struct param_block_descriptor_s { // initialized outside of main
    char *name;                   // NULL for pos_params
                                  // KEYWORD name for kw_params
                                  // LABEL name for Labeled_block params
    int num_params;               // required and optional
    int num_required_params;
    int num_optional_params;
    void *param_locations[];      // indexed by parameter number (first is 0)
                                  // initialized as {&x, &y, ...}
    unsigned long *var_set_masks; // all params, indexed by param number
                                  // applied to module.vars_set
                                  // initialized as (unsigned long []){...}
    unsigned long kw_mask;        // 0 if required keyword
                                  // applied to label.params_passed
    unsigned long *param_masks;   // passed masks for optional parameters
                                  // indexed by optional parameter number
                                  //   (first optional param is 0)
                                  // initialized as (unsigned long []){...}
};


struct module_descriptor_s {      // initialized outside main
    char *name;
    char *filename;
    struct label_descriptor_s *module_params;
    unsigned long vars_set;       // one bit per var, init to 0 outside of main
    unsigned long lineno;
    int num_labels;

    // initialized as {&label_desc, ...}
    struct label_descriptor_s *labels[];
};


#define FLAG_RUNNING            0x01

