# modules.module

module

# Calls c_config, each time it is passed.
type p_config_m_t is subroutine taking ?c_yield: c_yield_m_t ?c_done: c_done_t
                                    -> ?c_config: c_config_m_t


# Ends up going to p_next or calling p_done.
type c_yield_m_t is label taking module

# Does NOT call p_config.
type c_config_m_t is subroutine taking ?p_next: p_next_t ?p_done: p_done_t
                                    -> ?p_config: p_config_m_t

var c_yield  is c_yield_m_t
var c_done   is c_done_t
var c_config is c_config_m_t

function gen_modules returning p_config_m_t
    set imodule to: 0
    goto return_label p_config
  
  label p_next
    ======================================================
    | YN | imodule < `__num_modules__`
    ======================================================
    | X  | set i to: imodule
    |    | imodule += 1
    |    | goto c_yield (`__module_instances__[` i `]`)
    |  X | done
    |    | goto c_done
    ======================================================

  subroutine p_done
    done with: gen_modules
    return

  subroutine p_config ?c_yield: c_yield ?c_done: c_done ?c_config: c_config
    ======================================================
    | YN | got? c_config:
    ======================================================
    | X  | c_config p_next: p_next p_done: p_done
    |  X | return
    ======================================================


function get_module_name$ mod
    var mod is module
    return (`` mod `->name`)


function get_module_filename$ mod
    return (`` mod `->filename`)

